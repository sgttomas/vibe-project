# Backend Framework - Docker Compose Configuration
# 
# This configuration provides backend services for the Backend Framework:
# - Neo4j: Graph database for semantic matrix storage
# - GraphQL: API service for frontend communication  
# - Admin: Orchestration service for CLI operations
#
# Post-consolidation note (Aug 16, 2025):
# - Services now reference merged services in framework/
# - Backend services successfully integrated into main framework
# - Frontend runs separately at app/ (port 3000)
#
version: '3.8'

services:
  neo4j:
    image: neo4j:5.18-community
    container_name: chirality_neo4j
    restart: unless-stopped
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD}
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: 'apoc.*'
      NEO4J_dbms_memory_heap_initial__size: 1G
      NEO4J_dbms_memory_heap_max__size: 2G
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-plugins:/plugins
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  graphql:
    # Disabled by default; enable with: docker compose --profile full up
    profiles: ["full"]
    # Use a prebuilt image or adjust to your build context
    # build: ../../framework/graphql
    image: "<backend-graphql-image>:latest"
    container_name: chirality_graphql
    restart: unless-stopped
    ports:
      - "${GRAPHQL_PORT:-8080}:8080"
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      NEO4J_DATABASE: ${NEO4J_DATABASE:-neo4j}
      NODE_ENV: production
    depends_on:
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- --header='Content-Type: application/json' --post-data='{\"query\":\"{__typename}\"}' http://localhost:8080/graphql || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 20s

  admin:
    # Disabled by default; enable with: docker compose --profile full up
    profiles: ["full"]
    # Use a prebuilt image or adjust to your build context
    # build: ../../framework/admin
    image: "<backend-admin-image>:latest"
    container_name: chirality_admin
    restart: unless-stopped
    ports:
      - "${ADMIN_PORT:-3001}:3001"
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      NEO4J_DATABASE: ${NEO4J_DATABASE:-neo4j}
      GRAPHQL_API_BASE: http://graphql:8080
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4.1-nano}
      NODE_ENV: production
      NEXT_PUBLIC_GRAPHQL_URL: http://localhost:${GRAPHQL_PORT:-8080}/graphql
    depends_on:
      neo4j:
        condition: service_healthy
      graphql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/orchestrate/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  neo4j-data:
    name: chirality_neo4j-data
  neo4j-logs:
    name: chirality_neo4j-logs
  neo4j-plugins:
    name: chirality_neo4j-plugins

networks:
  default:
    name: chirality_network
